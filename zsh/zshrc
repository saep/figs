umask 027

PATH="${HOME}/bin:${HOME}/.local/bin:${HOME}/.cargo/bin:$PATH"
[ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env"
export PATH

typeset -U path

export EDITOR='nvim'
export VISUAL=$EDITOR

export MANPAGER='nvim +Man!'
export MANWIDTH=999

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DATA_HOME="${HOME}/.local/share"

export NVM_DIR="$HOME/.config/nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export NODE_VERSIONS="${NVM_DIR}/versions/node"
export NODE_VERSION_PREFIX=v

[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# User configuration


stty stop undef     #disable ESCs
stty start undef    #disable ESCq
setopt no_flowcontrol
setopt nobeep

setopt nohup
setopt completeinword
setopt pushd_ignore_dups
setopt noclobber

setopt hist_allow_clobber
setopt extended_history
setopt share_history
setopt histignorealldups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt histverify # show the history line before Executing

setopt correct # correct little mistakes in the called program
setopt auto_cd # you don't have to type cd to cd !
setopt extended_glob # more powerful patterns
setopt rc_quotes
setopt nonomatch
setopt noglobdots

## Completion settings
autoload -Uz compinit ; compinit
zstyle ':completion:::::' completer _complete _approximate _expand _ignored
# structure completions
zstyle ':completion:*:descriptions' format $'%{\e[0;31m%}completing %B%d%b%{\e[0m%}'
# start menu completion only if it could find no unambiguous initial string
zstyle ':completion:*:correct:*'       insert-unambiguous true
zstyle ':completion:*:corrections'     format $'%{\e[0;31m%}%d (errors: %e)%{\e[0m%}'
zstyle ':completion:*:correct:*'       original true

# activate color-completion
zstyle ':completion:*:default'         list-colors ${(s.:.)LS_COLORS}

# separate matches into groups
zstyle ':completion:*:matches'         group 'yes'
zstyle ':completion:*'                 group-name ''

# if there are more than 5 options allow selecting from a menu
zstyle ':completion:*'               menu select=4
zmodload zsh/complist
bindkey -M menuselect '\C-o' accept-and-menu-complete

# on processes completion complete all user processes
zstyle ':completion:*:processes'       command 'ps -au$USER'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# Ignore completion functions for commands you don't have:
zstyle ':completion::(^approximate*):*:functions' ignored-patterns '_*'

# Provide more processes in completion of programs like killall:
zstyle ':completion:*:processes-names' command 'ps c -u ${USER} -o command | uniq'

zstyle ':completion:*:man:*'      menu yes select

# Search path for sudo completion
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin \
    /usr/local/bin  \
    /usr/sbin       \
    /usr/bin        \
    /sbin           \
    /bin            \
    /usr/X11R6/bin

# provide .. as a completion
zstyle ':completion:*' special-dirs ..

# ignore some files in the auto completions
zstyle ':completion:*:*files' ignored-patterns '*?~'
zstyle ':completion:*:*:(e|emacs|less|rm|mv):*' ignore-line true
zstyle ':completion:*' ignore-parents parent pwd

zstyle ':completion::approximate*:*' prefix-needed false

bindkey '\C-w' kill-region
bindkey '\eq' push-line-or-edit # M-q (original: push-line)
bindkey ' ' magic-space
bindkey '\e.' insert-last-word
bindkey '^r' history-incremental-search-backward
bindkey '^s' history-incremental-search-forward
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^k' kill-line

autoload -z edit-command-line
zle -N edit-command-line
bindkey "\ee" edit-command-line # M-e

# press "ctrl-e d" to insert the actual date in the form yyyy-mm-dd
insert-datestamp() { LBUFFER+=${(%):-'%D{%Y-%m-%d}'}; }
zle -N insert-datestamp
#k# Insert a timestamp on the command line (yyyy-mm-dd)
bindkey '^ed' insert-datestamp

# run command line as user root via doas:
doas-command-line() {
    [[ -z $BUFFER ]] && zle up-history
    if [[ $BUFFER != doas\ * ]]; then
        BUFFER="doas $BUFFER"
        CURSOR=$(( CURSOR+5 ))
    fi
}
zle -N doas-command-line
# prepend the current command with "doas"
bindkey "^os" doas-command-line

# Ctrl-z to toggle between program and terminal
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line -w
  else
    zle push-input -w
    zle clear-screen -w
  fi
}
zle -N fancy-ctrl-z
bindkey "^z" fancy-ctrl-z

bindkey -s '^t' 'br^M'

alias ghci-pretty="stack ghci --ghci-options \"-interactive-print=Text.Pretty.Simple.pPrint\" --package pretty-simple $@"

alias gd="git diff -w $@"
alias mb="mvn package -T8 -DskipTests -Dmaven.javadoc.skip=true $@"

function mvn-env() {
    echo "Executing maven with ${MAVEN_SETTINGS_FILE}"
    if [ -z "${MAVEN_SETTINGS_FILE}" ]; then
        mvn $@
    else
        mvn -s ${MAVEN_SETTINGS_FILE} $@
    fi
}

alias mvn=mvn-env

function abs() {
    toCopy="`pwd`/$1"
    echo -n "$toCopy" | xsel -ib
    echo "Put in clipboard: $toCopy"
}

function npm-bin {
    export PATH="$(npm bin):$PATH"; npm $@
}

function take {
  if [[ -z $1 ]]; then
    echo "No argument given"
  else 
    [[ -d $1 ]] || mkdir -p $1
    cd $1
  fi
}

[[ "$TERM" == "xterm-kitty" ]] && alias ssh='TERM=xterm ssh $@'

compinit
